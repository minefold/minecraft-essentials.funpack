#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
funpack=$(cd $(dirname $0)/.. && pwd)

# spigot (http://ci.md-5.net/job/Spigot/)
ver="1122"
url="http://ci.md-5.net/job/Spigot/$ver/artifact/Spigot-Server/target/spigot.jar"
if test -d $cache/spigot-$ver
then
  echo "-----> Using Spigot Build $ver"
else
  rm -rf $cache/*
  mkdir -p $cache/spigot-$ver
  cd $cache/spigot-$ver
  echo -n "-----> Installing Spigot Build $ver"
  curl --silent -L $url -o spigot.jar
  echo " done"
fi
cp -R $cache/spigot-$ver/spigot.jar $build/spigot.jar

# worldedit (http://build.sk89q.com/job/WorldEdit/)
ver="5.5.8"
url="http://dev.bukkit.org/media/files/739/932/worldedit-5.5.8.zip"
if test -d $cache/worldedit-$ver
then
  echo "-----> Using WorldEdit Build $ver"
else
  mkdir -p $cache/worldedit-$ver
  cd $cache/worldedit-$ver
  echo -n "-----> Installing WorldEdit Build $ver"
  curl --silent -Lo worldedit-$ver.zip $url
  unzip worldedit-$ver.zip
  echo " done"
fi
cp $cache/worldedit-$ver/WorldEdit.jar $build/worldedit.jar

# worldguard (http://build.sk89q.com/job/Worldguard/)
worldguard_build="5.8"
worldguard_url="http://dev.bukkit.org/media/files/719/258/worldguard-5.8.zip"
if test -d $cache/worldguard-$worldguard_build
then
  echo "-----> Using WorldGuard Build $worldguard_build"
else
  mkdir -p $cache/worldguard-$worldguard_build
  cd $cache/worldguard-$worldguard_build
  echo -n "-----> Installing WorldGuard Build $worldguard_build"
  curl --silent -Lo worldguard-$worldguard_build.zip $worldguard_url
  unzip worldguard-$worldguard_build.zip
  echo " done"
fi
cp $cache/worldguard-$worldguard_build/WorldGuard.jar $build/worldguard.jar

# essentials (http://dev.bukkit.org/bukkit-plugins/essentials/)
ver="2.11.1"
url="http://dev.bukkit.org/media/files/711/777/Essentials.zip"
if test -d $cache/essentials-$ver
then
  echo "-----> Using Essentials $ver"
else
  mkdir -p $cache/essentials-$ver
  cd $cache/essentials-$ver
  echo -n "-----> Installing Essentials $ver"
  curl --silent -Lo essentials-$ver.zip $url
  unzip essentials-$ver.zip
  echo " done"
fi
mkdir -p $build/essentials
cp $cache/essentials-$ver/*.jar $build/essentials

# lwc (http://dev.bukkit.org/bukkit-plugins/lwc/)
ver="4.3.1"
url="http://dev.bukkit.org/media/files/647/269/LWC.jar"
if test -d $cache/lwc-$ver
then
  echo "-----> Using lwc $ver"
else
  mkdir -p $cache/lwc-$ver
  cd $cache/lwc-$ver
  echo -n "-----> Installing lwc $ver"
  curl --silent -Lo lwc.jar $url
  echo " done"
fi
mkdir -p $build/lwc
cp $cache/lwc-$ver/lwc.jar $build

# partycloud
ver="1"
url="http://funpack-assets.s3.amazonaws.com/Bukkit/partycloud.bukkit-$ver.tar.gz"
if test -d $cache/partycloud-$ver
then
  echo "-----> Using Partycloud $ver"
else
  mkdir -p $cache/partycloud-$ver
  cd $cache/partycloud-$ver
  echo -n "-----> Installing Partycloud $ver"
  curl --silent -L $url | tar xz
  echo " done"
fi
cp $cache/partycloud-$ver/partycloud.jar $build

cd $funpack
mkdir -p $build/bin
cp bin/run $build/bin
cp bin/import $build/bin

cp -R lib $build
cp -R templates $build
cp Procfile $build
cp Gemfile $build
cp Gemfile.lock $build
cp funpack.json $build
